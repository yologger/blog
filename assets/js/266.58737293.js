(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{1767:function(t,s,a){"use strict";a.r(s);var n=a(34),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#built-in-task"}},[t._v("Built-in Task")])]),a("li",[a("a",{attrs:{href:"#custom-task"}},[t._v("Custom Task")]),a("ul",[a("li",[a("a",{attrs:{href:"#정의"}},[t._v("정의")])]),a("li",[a("a",{attrs:{href:"#파라미터"}},[t._v("파라미터")])]),a("li",[a("a",{attrs:{href:"#dofirst-dolast"}},[t._v("doFirst, doLast")])])])])])]),a("p"),t._v(" "),a("h1",{attrs:{id:"task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task"}},[t._v("#")]),t._v(" Task")]),t._v(" "),a("p",[a("code",[t._v("Task")]),t._v("는 빌드를 위한 "),a("u",[t._v("작업 단위")]),t._v("다. Task는 크게 두 종류가 있다.")]),t._v(" "),a("ul",[a("li",[t._v("Built-in Task")]),t._v(" "),a("li",[t._v("Custom Task")])]),t._v(" "),a("h2",{attrs:{id:"built-in-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-task"}},[t._v("#")]),t._v(" Built-in Task")]),t._v(" "),a("p",[a("code",[t._v("Built-in Task")]),t._v("는 Gradle에 내장되어있는 Task다. Gradle 프로젝트를 초기화하는 "),a("code",[t._v("gradle init")]),t._v(", Gradle 프로젝트를 빌드하는 "),a("code",[t._v("gradle build")]),t._v(", Gradle 프로젝트를 실행하는 "),a("code",[t._v("gradle run")]),t._v("도 사실은 모두 Task다.")]),t._v(" "),a("p",[t._v("Gradle 프로젝트에서 "),a("code",[t._v("gradle tasks")]),t._v("명령어를 입력하면 모든 Built-in Task를 확인할 수 있다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ gradle tasks\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("> Task :tasks\n\n------------------------------------------------------------\nTasks runnable from root project 'KotlinApplication'\n------------------------------------------------------------\n\nApplication tasks\n-----------------\nrun - Runs this project as a JVM application\n\nBuild tasks\n-----------\nassemble - Assembles the outputs of this project.\nbuild - Assembles and tests this project.\nbuildDependents - Assembles and tests this project and all projects that depend on it.\nbuildKotlinToolingMetadata - Build metadata json file containing information about the used Kotlin tooling\nbuildNeeded - Assembles and tests this project and all projects it depends on.\nclasses - Assembles main classes.\nclean - Deletes the build directory.\njar - Assembles a jar archive containing the main classes.\ntestClasses - Assembles test classes.\n\nBuild Setup tasks\n-----------------\ninit - Initializes a new Gradle build.\nwrapper - Generates Gradle wrapper files.\n\nDistribution tasks\n------------------\nassembleDist - Assembles the main distributions\ndistTar - Bundles the project as a distribution.\ndistZip - Bundles the project as a distribution.\ninstallDist - Installs the project as a distribution as-is.\n\nDocumentation tasks\n-------------------\njavadoc - Generates Javadoc API documentation for the main source code.\n\nHelp tasks\n----------\nbuildEnvironment - Displays all buildscript dependencies declared in root project 'KotlinApplication'.\ndependencies - Displays all dependencies declared in root project 'KotlinApplication'.\ndependencyInsight - Displays the insight into a specific dependency in root project 'KotlinApplication'.\nhelp - Displays a help message.\njavaToolchains - Displays the detected java toolchains.\noutgoingVariants - Displays the outgoing variants of root project 'KotlinApplication'.\nprojects - Displays the sub-projects of root project 'KotlinApplication'.\nproperties - Displays the properties of root project 'KotlinApplication'.\ntasks - Displays the tasks runnable from root project 'KotlinApplication' (some of the displayed tasks may belong to subprojects).\n\nVerification tasks\n------------------\ncheck - Runs all checks.\ntest - Runs the test suite.\n\nTo see all tasks and more detail, run gradle tasks --all\n\nTo see more detail about a task, run gradle help --task <task>\n\nBUILD SUCCESSFUL in 19s\n1 actionable task: 1 executed\n")])])]),a("h2",{attrs:{id:"custom-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-task"}},[t._v("#")]),t._v(" Custom Task")]),t._v(" "),a("p",[a("code",[t._v("Custom Task")]),t._v("는 사용자가 "),a("code",[t._v("build.gradle")]),t._v("에 직접 정의하는 Task다.")]),t._v(" "),a("h3",{attrs:{id:"정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정의"}},[t._v("#")]),t._v(" 정의")]),t._v(" "),a("p",[t._v("Task는 다음과 같이 정의한다.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("task "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ..")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("다음과 같은 형태로도 정의할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("task")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Task는 콘솔에서 다음과 같이 실행한다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ gradle [task_name]\n")])])]),a("p",[a("code",[t._v("printHello")]),t._v("라는 Task를 정의하고 실행해보자.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("task printHello "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  println "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Hello!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ gradle printHello\n\n> Configure project :\nHello!\n\nBUILD SUCCESSFUL in 667ms\n")])])]),a("p",[t._v("Task를 "),a("code",[t._v("quite 모드")]),t._v("로 실행하면 오직 결과값만 출력된다. "),a("code",[t._v("-q")]),t._v("을 지정하면 된다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ gradle -q printHello\nHello!\n")])])]),a("h3",{attrs:{id:"파라미터"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#파라미터"}},[t._v("#")]),t._v(" 파라미터")]),t._v(" "),a("p",[t._v("Task로 파라미터를 전달할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("task sum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    println x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("이제 다음과 같이 호출할 수 있다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ gradle -q sum -Px=10 -Py=10\n20\n")])])]),a("h3",{attrs:{id:"dofirst-dolast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dofirst-dolast"}},[t._v("#")]),t._v(" doFirst, doLast")]),t._v(" "),a("p",[t._v("위에서는 Task를 다음과 같이 정의했다.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("task myTask "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  println "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"myTask"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("그러나 일반적으로 Task에서 실제로 수행할 작업은 doFirst, doLast 안에 정의한다.")]),t._v(" "),a("div",{staticClass:"language-groovy build.gradle extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("task "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    doFirst "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    doLast "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);