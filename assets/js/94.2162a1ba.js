(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{1516:function(a,s,t){"use strict";t.r(s);var n=t(34),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"table-of-contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[a._v("#")]),a._v(" Table of Contents")]),a._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#클래스패스"}},[a._v("클래스패스")]),n("ul",[n("li",[n("a",{attrs:{href:"#예제-1"}},[a._v("예제 1")])]),n("li",[n("a",{attrs:{href:"#예제-2"}},[a._v("예제 2")])]),n("li",[n("a",{attrs:{href:"#예제-3"}},[a._v("예제 3")])])])]),n("li",[n("a",{attrs:{href:"#spring-boot와-클래스패스"}},[a._v("Spring Boot와 클래스패스")])])])]),n("p"),a._v(" "),n("h2",{attrs:{id:"클래스패스"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#클래스패스"}},[a._v("#")]),a._v(" 클래스패스")]),a._v(" "),n("p",[n("code",[a._v("클래스패스(classpath)")]),a._v("는 클래스를 찾기 위한 경로다. 간단한 예제를 통해 클래스패스에 대해 알아보자.")]),a._v(" "),n("h3",{attrs:{id:"예제-1"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#예제-1"}},[a._v("#")]),a._v(" 예제 1")]),a._v(" "),n("p",[a._v("첫 번째 예제의 프로젝트 구조는 다음과 같다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ pwd \n/yologger/workspace/project\n\n$ tree\n.\n└── Main.java\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Main.java")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Main")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[a._v("다음과 같이 "),n("code",[a._v("Main.java")]),a._v("가 위치하는 경로에서는 이 파일을 컴파일하고 실행할 수 있다. 이는 JVM이 현재 위치를 클래스 파일로 인식하기 때문이다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ pwd \n/yologger/workspace/project\n\n$ javac Main.java\n\n$ java Main\nHello World\n")])])]),n("p",[a._v("그렇다면 "),n("code",[a._v("/yologger/workspace")]),a._v("로 이동하여 똑같은 명령어를 실행하면 어떻게 될까?")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[a._v(" ")]),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ cd ..\n\n$ pwd\n/yologger/workspace\n\n$ java Main\n")])])]),n("p",[a._v("다음과 같은 에러가 발생할 것이다. "),n("code",[a._v("Main.class")]),a._v(" 바이트코드의 위치를 찾지 못했기 때문이다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Error: Could not find or load main class Main\nCaused by: java.lang.ClassNotFoundException: Main\n")])])]),n("p",[a._v("이제 클래스패스를 통해 "),n("code",[a._v("Main.class")]),a._v("의 경로를 알려주자. "),n("code",[a._v("-classpath")]),a._v(" 또는 "),n("code",[a._v("-cp")]),a._v(" 옵션을 사용하면 된다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('$ java -classpath "./project" Main\nHello World\n')])])]),n("h3",{attrs:{id:"예제-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#예제-2"}},[a._v("#")]),a._v(" 예제 2")]),a._v(" "),n("p",[a._v("이제 "),n("code",[a._v("lib")]),a._v("폴더에 "),n("code",[a._v("Printer")]),a._v("클래스를 추가하고 "),n("code",[a._v("Main.java")]),a._v(" 코드를 다음과 같이 수정해보자.")]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Printer")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Printer")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("something"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Main.java")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Main")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Printer")]),a._v(" printer "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Printer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        printer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[a._v("프로젝트 구조는 다음과 같다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ pwd \n/yologger/workspace/project\n\n$ tree\n.\n├── Main.java\n└── lib\n    └── Printer.java\n")])])]),n("p",[n("code",[a._v("Main.java")]),a._v("는 "),n("code",[a._v("Printer.java")]),a._v("를 참조하고 있다. 따라서 "),n("code",[a._v("Main.java")]),a._v("를 컴파일할 때 "),n("code",[a._v("Priner.java")]),a._v("의 클래스패스를 알려주어야 한다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ javac -classpath ./lib Main.java\n")])])]),n("p",[a._v("컴파일을 하면 "),n("code",[a._v("Main.class")]),a._v(", "),n("code",[a._v("Printer.class")]),a._v("가 생성된다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ tree\n.\n├── Main.class\n├── Main.java\n└── lib\n    ├── Printer.class\n    ├── Printer.java\n    └── gson-2.8.0.jar\n")])])]),n("p",[a._v("이제 "),n("code",[a._v("Main.class")]),a._v("를 실행해보자. 실행할 때 역시 "),n("code",[a._v("Printer.class")]),a._v("의 경로를 알려주어야 한다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("java -classpath .:./lib Main\n")])])]),n("h3",{attrs:{id:"예제-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#예제-3"}},[a._v("#")]),a._v(" 예제 3")]),a._v(" "),n("p",[n("code",[a._v("jar")]),a._v("파일을 클래스패스에 추가하는 방법을 알아보자.")]),a._v(" "),n("p",[n("code",[a._v("lib")]),a._v(" 폴더에 "),n("code",[a._v("jar")]),a._v(" 파일을 추가한다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[a._v(" ")]),n("br")]),n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("$ tree\n.\n├── Main.java\n└── lib\n    └── gson-2.8.0.jar\n")])])]),n("p",[a._v("그리고 "),n("code",[a._v("Main.java")]),a._v("에서 "),n("code",[a._v("jar")]),a._v("에 의존하도록 수정한다.")]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("div",{staticClass:"highlight-lines"},[n("div",{staticClass:"highlighted"},[a._v(" ")]),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[a._v(" ")]),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("google"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gson"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Gson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Main")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Gson")]),a._v(" gson "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Gson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[a._v("컴파일 할 때 "),n("code",[a._v("jar")]),a._v(" 파일의 경로를 클래스패스 옵션으로 알려주어야 한다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('$ javac -classpath "./lib/gson-2.8.0.jar" Main.java\n')])])]),n("p",[a._v("실행할 때도 "),n("code",[a._v("jar")]),a._v(" 파일의 경로를 알려주어야 한다.")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('$ java -classpath ".:./lib/gson-2.8.0.jar" Main\n')])])]),n("h2",{attrs:{id:"spring-boot와-클래스패스"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot와-클래스패스"}},[a._v("#")]),a._v(" Spring Boot와 클래스패스")]),a._v(" "),n("p",[a._v("IntelliJ로 생성한 스프링 부트 프로젝트의 클래스 패스는 "),n("code",[a._v("IntelliJ > File > Project Structure")]),a._v("에서 확인할 수 있다.")]),a._v(" "),n("p",[n("img",{attrs:{src:t(434),alt:""}})]),a._v(" "),n("p",[a._v("테스트 환경을 위한 클래스 패스는 다음과 같이 확인할 수 있다.")]),a._v(" "),n("p",[n("img",{attrs:{src:t(435),alt:""}})]),a._v(" "),n("p",[n("code",[a._v("Gradle")]),a._v(" 또는 "),n("code",[a._v("Maven")]),a._v("을 사용하는 경우 추가한 의존성 또한 클래스 패스에 추가된다.")]),a._v(" "),n("p",[n("img",{attrs:{src:t(436),alt:""}})])])}),[],!1,null,null,null);s.default=e.exports},434:function(a,s,t){a.exports=t.p+"assets/img/1.ac60de11.png"},435:function(a,s,t){a.exports=t.p+"assets/img/2.97fbfb04.png"},436:function(a,s,t){a.exports=t.p+"assets/img/3.3773c6f0.png"}}]);