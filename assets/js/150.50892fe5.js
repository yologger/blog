(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{1432:function(e,t,a){e.exports=a.p+"assets/img/0.af032386.png"},1745:function(e,t,a){"use strict";a.r(t);var s=a(34),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"table-of-contents"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#설치-및-설정"}},[e._v("설치 및 설정")])]),s("li",[s("a",{attrs:{href:"#사용법"}},[e._v("사용법")])])])]),s("p"),e._v(" "),s("h1",{attrs:{id:"logstash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logstash"}},[e._v("#")]),e._v(" Logstash")]),e._v(" "),s("p",[s("code",[e._v("Logstash")]),e._v("는 데이터 소스의 데이터를 실시간으로 수집하여 Elastic Search로 전달하는 파이프 라인 엔진이다. 여러 데이터 소스로부터 발생하는 데이터를 적절하게 변환한다.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(1432),alt:""}})]),e._v(" "),s("h2",{attrs:{id:"설치-및-설정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설치-및-설정"}},[e._v("#")]),e._v(" 설치 및 설정")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ brew install elastic/tap/logstash-full\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ brew info elastic/tap/logstash-full\nelastic/tap/logstash-full: stable 7.17.4\nTool for managing events and logs\nhttps://www.elastic.co/products/logstash\nConflicts with:\n  logstash\n  logstash-oss\n/usr/local/Cellar/logstash-full/7.17.4 (12,937 files, 600.8MB) *\n  Built from source on 2022-06-07 at 03:25:25\nFrom: https://github.com/elastic/homebrew-tap/blob/HEAD/Formula/logstash-full.rb\n==> Caveats\nPlease read the getting started guide located at:\n  https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html\n")])])]),s("p",[e._v("Homebrew로 Logstash를 설치한 경우 설정 파일은 "),s("code",[e._v("/usr/local/etc/logstash")]),e._v("에 위치한다.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ pwd\n/usr/local/etc/logstash\n \n$ ls\njvm.options          logstash-sample.conf pipelines.yml\nlog4j2.properties    logstash.yml         startup.options\n")])])]),s("h2",{attrs:{id:"사용법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#사용법"}},[e._v("#")]),e._v(" 사용법")]),e._v(" "),s("p",[e._v("먼저 "),s("code",[e._v("Logstash")]),e._v("가 데이터를 어떻게 변환하고 처리할지를 "),s("code",[e._v(".conf")]),e._v("확장자 파일에 정의해야한다. 표준입력과 표준출력을 사용하는 "),s("code",[e._v("logstash.conf")]),e._v("를 다음과 같이 정의해보자.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("input {\n\tstdin { }\n}\noutput {\n\tstdout { }\n}\n")])])]),s("p",[e._v("그리고 다음과 같이 Logstash를 실행한다. 이 때 "),s("code",[e._v(".conf")]),e._v("확장자 파일을 "),s("code",[e._v("-f")]),e._v("옵션으로 넘겨주면 된다.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ logstash -f ./logstash-std.conf\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('logstash -f logstash-std.config         \nUsing bundled JDK: /usr/local/Cellar/logstash-full/7.17.4/libexec/jdk.app/Contents/Home\nOpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.\nSending Logstash logs to /usr/local/Cellar/logstash-full/7.17.4/libexec/logs which is now configured via log4j2.properties\n[2022-06-07T16:33:15,128][INFO ][logstash.runner          ] Log4j configuration path used is: /usr/local/Cellar/logstash-full/7.17.4/libexec/config/log4j2.properties\n[2022-06-07T16:33:15,139][INFO ][logstash.runner          ] Starting Logstash {"logstash.version"=>"7.17.4", "jruby.version"=>"jruby 9.2.20.1 (2.5.8) 2021-11-30 2a2962fbd1 OpenJDK 64-Bit Server VM 11.0.14.1+1 on 11.0.14.1+1 +indy +jit [darwin-x86_64]"}\n[2022-06-07T16:33:15,142][INFO ][logstash.runner          ] JVM bootstrap flags: [-Xms1g, -Xmx1g, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djdk.io.File.enableADS=true, -Djruby.compile.invokedynamic=true, -Djruby.jit.threshold=0, -Djruby.regexp.interruptible=true, -XX:+HeapDumpOnOutOfMemoryError, -Djava.security.egd=file:/dev/urandom, -Dlog4j2.isThreadContextMapInheritable=true]\n[2022-06-07T16:33:15,245][WARN ][logstash.config.source.multilocal] Ignoring the \'pipelines.yml\' file because modules or command line options are specified\n[2022-06-07T16:33:16,424][INFO ][logstash.agent           ] Successfully started Logstash API endpoint {:port=>9600, :ssl_enabled=>false}\n[2022-06-07T16:33:17,503][INFO ][org.reflections.Reflections] Reflections took 92 ms to scan 1 urls, producing 119 keys and 419 values \n[2022-06-07T16:33:18,438][INFO ][logstash.javapipeline    ][main] Starting pipeline {:pipeline_id=>"main", "pipeline.workers"=>8, "pipeline.batch.size"=>125, "pipeline.batch.delay"=>50, "pipeline.max_inflight"=>1000, "pipeline.sources"=>["/usr/local/etc/logstash/logstash-std.config"], :thread=>"#<Thread:0x256e3527 run>"}\n[2022-06-07T16:33:19,231][INFO ][logstash.javapipeline    ][main] Pipeline Java execution initialization time {"seconds"=>0.79}\nWARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by com.jrubystdinchannel.StdinChannelLibrary$Reader (file:/usr/local/Cellar/logstash-full/7.17.4/libexec/vendor/bundle/jruby/2.5.0/gems/jruby-stdin-channel-0.2.0-java/lib/jruby_stdin_channel/jruby_stdin_channel.jar) to field java.io.FilterInputStream.in\nWARNING: Please consider reporting this to the maintainers of com.jrubystdinchannel.StdinChannelLibrary$Reader\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n[2022-06-07T16:33:19,309][INFO ][logstash.javapipeline    ][main] Pipeline started {"pipeline.id"=>"main"}\nThe stdin plugin is now waiting for input:\n[2022-06-07T16:33:19,364][INFO ][logstash.agent           ] Pipelines running {:count=>1, :running_pipelines=>[:main], :non_running_pipelines=>[]}\n')])])]),s("p",[e._v("표준입력(키보드)로 데이터를 입력하면 표준출력(모니터)로 결과물이 출력되게된다.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('hello\n{\n       "message" => "hello",\n      "@version" => "1",\n    "@timestamp" => 2022-06-07T07:34:36.059Z,\n          "host" => "yologger-MacBookPro.local"\n}\ngoodbye\n{\n       "message" => "goodbye",\n      "@version" => "1",\n    "@timestamp" => 2022-06-07T07:34:47.710Z,\n          "host" => "yologger-MacBookPro.local"\n}\n')])])]),s("p",[e._v("파일에서 데이터를 읽어서 적절학게 필터링한 후 ElasticSearch로 전달하도록 "),s("code",[e._v(".conf")]),e._v("파일을 정의할 수도 있다.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('input {\n  file {\n    path => "/home/yologger/Documents/data/stock.csv"\n    start_position => "beginning"\n    sincedb_path => "/dev/null"    \n  }\n}\nfilter {\n  csv {\n      separator => ","\n      columns => ["Date","Open","High","Low","Close","Volume","Adj Close"]\n  }\n  mutate {convert => ["Open", "float"]}\n  mutate {convert => ["High", "float"]}\n  mutate {convert => ["Low", "float"]}\n  mutate {convert => ["Close", "float"]}\n}\noutput {  \n    elasticsearch {\n        hosts => "localhost"\n        index => "stock"\n    }\n    stdout {}\n}\n')])])]),s("p",[s("code",[e._v("Filebeat")]),e._v("로 부터 데이터를 받아 조건에 따라 다른 형태로 결과를 보낼 수도 있다.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('input { \n    beats {\n        port => 5044\n    }\n}\n\noutput {\n    if [beat][hostname] == "ip-172-31-30-178" or [beat][hostname] == "ip-172-31-30-179" {\n        elasticsearch {\n            hosts => "localhost:9200"\n            manage_template => false\n            index => "tomcat-%{+YYYY.MM.dd}"\n            document_type => "%{[@metadata][type]}"\n        }\n    }\n    else if [beat][hostname] == "ip-172-31-30-180" {\n        elasticsearch {\n            hosts => "localhost:9200"\n            manage_template => false\n            index => "database-%{+YYYY.MM.dd}"\n            document_type => "%{[@metadata][type]}"\n        }\n    }\n    else {\n        elasticsearch {\n            hosts => "localhost:9200"\n            manage_template => false\n            index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"\n            document_type => "%{[@metadata][type]}"\n        }\n    }\n}\n')])])])])}),[],!1,null,null,null);t.default=n.exports}}]);