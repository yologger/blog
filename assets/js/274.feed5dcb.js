(window.webpackJsonp=window.webpackJsonp||[]).push([[274],{1776:function(t,a,v){"use strict";v.r(a);var _=v(34),e=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"table-of-contents"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#타입-추론"}},[t._v("타입 추론")])]),v("li",[v("a",{attrs:{href:"#늦은-초기화"}},[t._v("늦은 초기화")]),v("ul",[v("li",[v("a",{attrs:{href:"#lateinit-var"}},[t._v("lateinit var")])]),v("li",[v("a",{attrs:{href:"#val-by-lazy"}},[t._v("val by lazy")])])])]),v("li",[v("a",{attrs:{href:"#스코프-함수"}},[t._v("스코프 함수")])]),v("li",[v("a",{attrs:{href:"#동일성과-동등성"}},[t._v("동일성과 동등성")]),v("ul",[v("li",[v("a",{attrs:{href:"#동일성"}},[t._v("동일성")])]),v("li",[v("a",{attrs:{href:"#동등성"}},[t._v("동등성")])])])])])]),v("p"),t._v(" "),v("h1",{attrs:{id:"kotlin-면접-정리"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kotlin-면접-정리"}},[t._v("#")]),t._v(" Kotlin 면접 정리")]),t._v(" "),v("p",[v("code",[t._v("Kotlin")]),t._v(" 면접 내용을 정리합니다.")]),t._v(" "),v("h2",{attrs:{id:"타입-추론"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#타입-추론"}},[t._v("#")]),t._v(" 타입 추론")]),t._v(" "),v("p",[t._v("변수나 상수에 타입을 선언하지 않아도 할당되는 값에 따라 자동으로 타입을 추론해주는 기능")]),t._v(" "),v("h2",{attrs:{id:"늦은-초기화"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#늦은-초기화"}},[t._v("#")]),t._v(" 늦은 초기화")]),t._v(" "),v("ul",[v("li",[t._v("Kotlin은 원칙적으로 변수나 상수를 선언과 동시에 초기화해야한다.")]),t._v(" "),v("li",[t._v("값이 없다면 "),v("code",[t._v("Nullable")]),t._v(" 타입으로도 선언한 후 "),v("code",[t._v("null")]),t._v("이라도 할당해야한다.")]),t._v(" "),v("li",[t._v("늦은 초기화를 사용하면 선언만 먼저 하고 초기화는 나중에 할 수 있는 방법을 제공한다.")]),t._v(" "),v("li",[t._v("Kotlin에서는 두 가지 방식의 늦은 초기화를 제공한다.")])]),t._v(" "),v("h3",{attrs:{id:"lateinit-var"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#lateinit-var"}},[t._v("#")]),t._v(" lateinit var")]),t._v(" "),v("ul",[v("li",[t._v("보통 클래스 내부에서 사용한다.")]),t._v(" "),v("li",[t._v("기본 자료형에는 사용할 수 없으며 클래스의 인스턴스에만 사용할 수 있다.")])]),t._v(" "),v("h3",{attrs:{id:"val-by-lazy"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#val-by-lazy"}},[t._v("#")]),t._v(" val by lazy")]),t._v(" "),v("ul",[v("li",[t._v("상수에 접근할 때 값이 초기화된다.")])]),t._v(" "),v("h2",{attrs:{id:"스코프-함수"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#스코프-함수"}},[t._v("#")]),t._v(" 스코프 함수")]),t._v(" "),v("ul",[v("li",[v("b",[v("code",[t._v("run()")])]),t._v(": 함수를 호출한 객체가 람다에 암시적으로 전달되며, "),v("code",[t._v("this")]),t._v(" 키워드로 접근할 수 있다. 또한 람다식의 마지막 구문이 결과값으로 반환된다.")]),t._v(" "),v("li",[v("b",[v("code",[t._v("let()")])]),t._v(": 함수를 호출한 객체가 람다에 명시적으로 전달되며, "),v("code",[t._v("it")]),t._v("으로 접근할 수 있다. 또한 람다식의 마지막 구문이 결과값으로 반환된다.")]),t._v(" "),v("li",[v("b",[v("code",[t._v("apply()")])]),t._v(": 함수를 호출한 객체가 람다에 암시적으로 전달되며, "),v("code",[t._v("this")]),t._v(" 키워드로 접근할 수 있다. 또한 람다식을 적용한 객체가 반환된다.")]),t._v(" "),v("li",[v("b",[v("code",[t._v("also()")])]),t._v(": 함수를 호출한 객체가 람다에 명시적으로 전달되며, "),v("code",[t._v("it")]),t._v("으로 접근할 수 있다. 또한 람다식을 적용한 객체가 반환된다.")]),t._v(" "),v("li",[v("b",[v("code",[t._v("with()")])]),t._v(": "),v("code",[t._v("run()")]),t._v("과 유사하지만 인스턴스를 첫 번째 인자로 전달한다.")])]),t._v(" "),v("h2",{attrs:{id:"동일성과-동등성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#동일성과-동등성"}},[t._v("#")]),t._v(" 동일성과 동등성")]),t._v(" "),v("h3",{attrs:{id:"동일성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#동일성"}},[t._v("#")]),t._v(" 동일성")]),t._v(" "),v("p",[v("code",[t._v("동일성(Identity)")]),t._v("는 두 객체의 주소값이 같다는 것을 의미한다. Kotlin에서는 "),v("code",[t._v("===")]),t._v(" 연산자로 두 객체의 주소값이 동일한지 비교할 수 있다.")]),t._v(" "),v("h3",{attrs:{id:"동등성"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#동등성"}},[t._v("#")]),t._v(" 동등성")]),t._v(" "),v("p",[v("code",[t._v("동등성(Equality)")]),t._v("는 두 객체의 속성값이 같다는 것을 의마한다. Kotlin 에서는 "),v("code",[t._v("==")]),t._v("연산자로 동등성을 비교할 수 있으며 내부적으로 "),v("code",[t._v("equal()")]),t._v("메소드가 호출된다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);