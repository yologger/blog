(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{1727:function(e,s,t){"use strict";t.r(s);var a=t(34),o=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#docker-compose-설치"}},[e._v("Docker Compose 설치")])]),t("li",[t("a",{attrs:{href:"#docker-compose-yml"}},[e._v("docker-compose.yml")])]),t("li",[t("a",{attrs:{href:"#docker-compose-실행"}},[e._v("Docker Compose 실행")]),t("ul",[t("li",[t("a",{attrs:{href:"#docker-compose-컨테이너들-확인하기"}},[e._v("Docker Compose 컨테이너들 확인하기")])]),t("li",[t("a",{attrs:{href:"#docker-compose-재시작"}},[e._v("Docker Compose 재시작")])]),t("li",[t("a",{attrs:{href:"#docker-compose-중지"}},[e._v("Docker Compose 중지")])]),t("li",[t("a",{attrs:{href:"#docker-compose-삭제"}},[e._v("Docker Compose 삭제")])])])])])]),t("p"),e._v(" "),t("h1",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[e._v("#")]),e._v(" Docker Compose")]),e._v(" "),t("p",[e._v("일반적으로 하나의 시스템은 여러 컨테이너로 구성된다. "),t("code",[e._v("Docker Compose")]),e._v("를 사용하면 각 컨테이너 실행을 위한 명령어를 하나씩 입력할 필요없이 "),t("code",[e._v("docker-compose.yml")]),e._v("파일에 모든 컨테이너 실행과 실행 순서를 작성할 수 있다.")]),e._v(" "),t("h2",{attrs:{id:"docker-compose-설치"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-설치"}},[e._v("#")]),e._v(" Docker Compose 설치")]),e._v(" "),t("p",[e._v("Mac OS의 경우 "),t("code",[e._v("Docker Desktop on Mac")]),e._v("에 "),t("code",[e._v("Docker Compose")]),e._v("가 내장되어있다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose -version\ndocker-compose version 1.29.2, build 5becea4c\n")])])]),t("h2",{attrs:{id:"docker-compose-yml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml"}},[e._v("#")]),e._v(" docker-compose.yml")]),e._v(" "),t("p",[e._v("Docker Compose를 사용하려면 "),t("code",[e._v("docker-compose.yml")]),e._v("파일을 생성하고 생성할 이미지들과 필요한 정보들을 나열해야한다. 아래 예제는 세 개의 컨테이너 MySQL, Nginx, Tomcat을 실행한다.")]),e._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# docker-compose.yml")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'3'")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# MySQL")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("db")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" docker.io/mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"3306:3306"')]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" MYSQL_ROOT_PASSWORD=password\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Tomcat")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" docker.io/tomcat\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"8080:8080"')]),e._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Nginx")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" docker.io/nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"80:80"')]),e._v("\n")])])]),t("h2",{attrs:{id:"docker-compose-실행"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-실행"}},[e._v("#")]),e._v(" Docker Compose 실행")]),e._v(" "),t("p",[t("code",[e._v("docker-compose up")]),e._v(" 명령어로 컨테이너들을 포그라운드로 실행할 수 있다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose up\n")])])]),t("p",[t("code",[e._v("-d")]),e._v(" 옵션을 추가하면 백그라운드로 실행한다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose up -d\n")])])]),t("p",[e._v("만약 파일 이름이 "),t("code",[e._v("docker-compose.yml")]),e._v("이 아니라면 "),t("code",[e._v("-f")]),e._v(" 옵션으로 파일 이름을 지정할 수 있다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose -f my-docker-compose.yml up -d\n")])])]),t("h3",{attrs:{id:"docker-compose-컨테이너들-확인하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-컨테이너들-확인하기"}},[e._v("#")]),e._v(" Docker Compose 컨테이너들 확인하기")]),e._v(" "),t("p",[t("code",[e._v("docker-compose ps")]),e._v(" 명령어로 컨테이너들을 확인할 수 있다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose ps\n    Name                   Command               State                 Ports              \n------------------------------------------------------------------------------------------\nproject_app_1   catalina.sh run                  Up      0.0.0.0:8080->8080/tcp           \nproject_db_1    docker-entrypoint.sh mysqld      Up      0.0.0.0:3306->3306/tcp, 33060/tcp\nproject_web_1   /docker-entrypoint.sh ngin ...   Up      0.0.0.0:80->80/tcp  \n")])])]),t("h3",{attrs:{id:"docker-compose-재시작"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-재시작"}},[e._v("#")]),e._v(" Docker Compose 재시작")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose restart\n")])])]),t("h3",{attrs:{id:"docker-compose-중지"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-중지"}},[e._v("#")]),e._v(" Docker Compose 중지")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose stop\n")])])]),t("h3",{attrs:{id:"docker-compose-삭제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-삭제"}},[e._v("#")]),e._v(" Docker Compose 삭제")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ docker-compose down\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);