(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{1401:function(t,s,a){t.exports=a.p+"assets/img/1.b5e751d1.png"},1402:function(t,s,a){t.exports=a.p+"assets/img/2.2dded515.png"},1403:function(t,s,a){t.exports=a.p+"assets/img/3.4f816dd5.png"},1404:function(t,s,a){t.exports=a.p+"assets/img/6.14cb9040.png"},1405:function(t,s,a){t.exports=a.p+"assets/img/4.57473c67.png"},1406:function(t,s,a){t.exports=a.p+"assets/img/5.643080ba.png"},1407:function(t,s,a){t.exports=a.p+"assets/img/7.a25de2ef.png"},1408:function(t,s,a){t.exports=a.p+"assets/img/10.e718a42e.png"},1409:function(t,s,a){t.exports=a.p+"assets/img/11.3e908c96.png"},1410:function(t,s,a){t.exports=a.p+"assets/img/12.7ad5af20.png"},1411:function(t,s,a){t.exports=a.p+"assets/img/13.479aed97.png"},1412:function(t,s,a){t.exports=a.p+"assets/img/14.dc37fb94.png"},1413:function(t,s,a){t.exports=a.p+"assets/img/15.40e1c678.png"},1414:function(t,s,a){t.exports=a.p+"assets/img/16.b984e4b8.png"},1415:function(t,s,a){t.exports=a.p+"assets/img/17.9ed036f5.png"},1416:function(t,s,a){t.exports=a.p+"assets/img/19.21d678a3.png"},1417:function(t,s,a){t.exports=a.p+"assets/img/20.233125d6.png"},1418:function(t,s,a){t.exports=a.p+"assets/img/21.2442d853.png"},1419:function(t,s,a){t.exports=a.p+"assets/img/22.73e6c8bf.png"},1420:function(t,s,a){t.exports=a.p+"assets/img/23.c7a86bbd.png"},1732:function(t,s,a){"use strict";a.r(s);var e=a(34),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"table-of-contents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#ci-cd-파이프라인"}},[t._v("CI/CD 파이프라인")])]),e("li",[e("a",{attrs:{href:"#gitops"}},[t._v("GitOps")])]),e("li",[e("a",{attrs:{href:"#환경"}},[t._v("환경")])]),e("li",[e("a",{attrs:{href:"#ci-구축하기"}},[t._v("CI 구축하기")])]),e("li",[e("a",{attrs:{href:"#네임스페이스-생성하기"}},[t._v("네임스페이스 생성하기")])]),e("li",[e("a",{attrs:{href:"#ecr-접근-권한-설정"}},[t._v("ECR 접근 권한 설정")])]),e("li",[e("a",{attrs:{href:"#메니페스트-리포지토리-구축"}},[t._v("메니페스트 리포지토리 구축")])]),e("li",[e("a",{attrs:{href:"#argo-cd를-사용하여-배포하기"}},[t._v("Argo CD를 사용하여 배포하기")])]),e("li",[e("a",{attrs:{href:"#argo-rollout-적용하기"}},[t._v("Argo Rollout 적용하기")])])])]),e("p"),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("이 포스트는 "),e("a",{attrs:{href:"https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/110-cicd/100-cicd",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식 문서"),e("OutboundLink")],1),t._v("를 참고하여 작성되었습니다.")])]),t._v(" "),e("h2",{attrs:{id:"ci-cd-파이프라인"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd-파이프라인"}},[t._v("#")]),t._v(" CI/CD 파이프라인")]),t._v(" "),e("p",[e("code",[t._v("Github Actions")]),t._v("와 "),e("code",[t._v("Argo CD")]),t._v("를 사용하여 스프링부트 프로젝트를 쿠버네티스 클러스터에 배포한다. 공식 문서에서 제공하는 CI/CD 파이프라인의 흐름은 다음과 같다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1401),alt:""}})]),t._v(" "),e("ol",[e("li",[t._v("개발자는 소스코드 리포지토리에 푸시한다.")]),t._v(" "),e("li",[t._v("소스코드 리포지토리의 "),e("code",[t._v("GitHub Actions")]),t._v("가 동작하여 도커 이미지를 생성하고 ECR에 푸시한다.")]),t._v(" "),e("li",[e("code",[t._v("GitHub Actions")]),t._v("는 메니페스트 리포지토리에 이미지를 쿠버네티스 클러스터에 배포하기 위한 메니페스트 파일을 생성한다.")]),t._v(" "),e("li",[e("code",[t._v("Argo CD")]),t._v("가 메니페스트 리포지토리 변화를 감지하여 쿠버네티스 클러스터에 반영한다.")])]),t._v(" "),e("h2",{attrs:{id:"gitops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitops"}},[t._v("#")]),t._v(" GitOps")]),t._v(" "),e("p",[t._v("위처럼 배포, 운영과 관련된 모든 절차를 선언적으로 코드화하여 "),e("code",[t._v("Git")]),t._v("에서 관리하는 것을 "),e("b",[e("code",[t._v("GitOps")])]),t._v("라고 한다.")]),t._v(" "),e("p",[t._v("GitOps의 핵심은 두 개의 저장소(소스코드 저장소, 메니페스트 저장소)을 사용하는 것이다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1402),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"환경"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#환경"}},[t._v("#")]),t._v(" 환경")]),t._v(" "),e("ul",[e("li",[t._v("Spring Boot")]),t._v(" "),e("li",[t._v("Github Actions")]),t._v(" "),e("li",[t._v("AWS ECR")]),t._v(" "),e("li",[t._v("Multi AWS EC2 Kubernetes cluster (Not EKS)")]),t._v(" "),e("li",[t._v("Argo CD")])]),t._v(" "),e("h2",{attrs:{id:"ci-구축하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ci-구축하기"}},[t._v("#")]),t._v(" CI 구축하기")]),t._v(" "),e("p",[e("code",[t._v("CI(Continuous Integration)")]),t._v("을 먼저 구축해보자.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1403),alt:""}})]),t._v(" "),e("p",[e("code",[t._v("Dockerfile")]),t._v("은 다음과 같다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('FROM openjdk:8-jdk-alpine\nARG JAR_FILE=build/libs/*.jar\nCOPY ${JAR_FILE} app.jar\nENTRYPOINT ["java","-Dspring.profiles.active=prod",  "-jar","/app.jar"]\n')])])]),e("p",[e("code",[t._v("Github Actions")]),t._v(" 스크립트는 다음과 같다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# main.yml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Set up JDK 1.8\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("java@v1\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("java-version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.8")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Grant execute permission for gradlew\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" chmod +x gradlew\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Add properties file\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" echo '$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.APPLICATION_PROD_PROPERTIES "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("' "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" ./src/main/resources/application"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("prod.properties\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Jar 빌드")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build with Gradle\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./gradlew clean build\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AWS IAM 인증")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Configure AWS credentials\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("actions/configure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("aws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("credentials@v1\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("aws-access-key-id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AWS_ACCESS_KEY_ID "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("aws-secret-access-key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AWS_SECRET_ACCESS_KEY "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("aws-region")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AWS_REGION "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# AWS ECR 로그인")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Login to Amazon ECR\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" login"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ecr\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("actions/amazon"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ecr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("login@v1\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 이미지 태그 생성")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Make image tag\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" image\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          VERSION=$(echo ${{ github.sha }} | cut -c1-8)\n          echo VERSION=$VERSION\n          echo "::set-output name=version::$VERSION"')]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 도커 이미지 빌드 & AWS ECR에 푸시")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build and Push images to AWS ECR\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("image\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ECR_REGISTRY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" steps.login"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ecr.outputs.registry "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ECR_REPOSITORY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ECR_REPOSITORY "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("IMAGE_TAG")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" steps.image.outputs.version "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          echo "::set-output name=ecr_repository::$ECR_REPOSITORY"\n          echo "::set-output name=image_tag::$IMAGE_TAG"\n          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG')]),t._v("\n")])])]),e("p",[t._v("빌드가 성공했다면 "),e("code",[t._v("ECR")]),t._v("에 이미지가 저장되었을 것이다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1404),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"네임스페이스-생성하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#네임스페이스-생성하기"}},[t._v("#")]),t._v(" 네임스페이스 생성하기")]),t._v(" "),e("p",[t._v("쿠버네티스 클러스터에 네임스페이스를 생성한다. 모든 오브젝트는 이 네임스페이스에서 실행된다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl create namespace <NAMESPACE>\n")])])]),e("h2",{attrs:{id:"ecr-접근-권한-설정"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecr-접근-권한-설정"}},[t._v("#")]),t._v(" ECR 접근 권한 설정")]),t._v(" "),e("p",[t._v("ECR에서 쿠버네티스로 이미지를 Pull 하려면 접근권한 등록이 필요하다. 먼저 클러스터에서 AWS IAM 사용자의 Access key, Secret key를 등록하자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ aws configure\nAWS Access Key ID [None]: <ACCESS_KEY>\nAWS Secret Access Key [None]: <SECRET_KEY>\nDefault region name [None]: <REGION>\nDefault output format [None]: \n")])])]),e("p",[t._v("그 다음 AWS ECR에 로그인한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ aws ecr get-login-password --region <REGION> | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com\n")])])]),e("p",[t._v("로그인 정보는 "),e("code",[t._v("~/.docker/config.json")]),t._v("에 저장된다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ cat ~/.docker/config.json\n")])])]),e("p",[t._v("이제 ECR에 접근하기 위한 비밀번호를 얻기 위해 다음 명령어를 입력한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ aws ecr get-login-password --region <REGION>\n")])])]),e("p",[t._v("그리고 이 비밀번호를 사용하여 위에서 생성한 네임스페이스에 Secret을 생성한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl create secret docker-registry regcred --namespace=<NAMESPACE> --docker-server=<SERVER> --docker-username=AWS --docker-password=<PASSWORD>\n")])])]),e("div",{staticClass:"language- extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl get secret -n <NAMESPACE>\nNAME                  TYPE                                  DATA   AGE\ndefault-token-jvv9p   kubernetes.io/service-account-token   3      168m\nregcred               kubernetes.io/dockerconfigjson        1      15m\n")])])]),e("p",[t._v("생성한 Secret은 포스트 뒷 부분에서 사용한다.")]),t._v(" "),e("h2",{attrs:{id:"메니페스트-리포지토리-구축"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#메니페스트-리포지토리-구축"}},[t._v("#")]),t._v(" 메니페스트 리포지토리 구축")]),t._v(" "),e("p",[t._v("메니페스트 파일은 도커 이미지를 쿠버네티스 클러스터에 어떤 식으로 배포할지를 선언한 파일이며, 보통 "),e("u",[t._v("쿠버네티스 오브젝트를 선언한 YAML 설정파일")]),t._v("과 "),e("u",[e("code",[t._v("Kustomize")]),t._v(" 관련 파일")]),t._v("을 의마한다. 메니페스트 리포지토리에는 이 파일이 저장된다.")]),t._v(" "),e("p",[t._v("이제 메니페스트 리포지토리를 생성하고 CI/CD 파이프라인을 구축해보자.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1405),alt:""}})]),t._v(" "),e("p",[t._v("먼저 로컬 PC에서 다음과 같은 구조의 디렉토리를 생성한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ tree\n.\n├── base\n│   ├── deployment.yml\n│   ├── kustomization.yml\n│   └── service.yml\n└── overlays\n    └── prod\n        └── kustomization.yml\n")])])]),e("p",[e("code",[t._v("base/deployment.yml")]),t._v("은 다음과 같다. 위해서 생성한 Secret을 반드시 등록해준다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <YOUR_AWS_IAM_USER_ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".dkr.ecr.<YOUR_ECR_REGION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".amazonaws.com/<YOUR_ECR_REPOSITORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" regcred\n")])])]),e("p",[e("code",[t._v("base/service.yml")]),t._v("은 다음과 같다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NodePort\n")])])]),e("p",[e("code",[t._v("base/kustomization.yml")]),t._v("은 다음과 같다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kustomize.config.k8s.io/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Kustomization\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deployment.yml\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" service.yml\n")])])]),e("p",[e("code",[t._v("overlays/prod/kustomization.yml")]),t._v("은 다음과 같다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kustomize.config.k8s.io/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Kustomization\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("images")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <YOUR_AWS_IAM_USER_ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".dkr.ecr.<YOUR_ECR_REGION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".amazonaws.com/<YOUR_ECR_REPOSITORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("newName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <YOUR_AWS_IAM_USER_ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".dkr.ecr.<YOUR_ECR_REGION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".amazonaws.com/<YOUR_ECR_REPOSITORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("newTag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" abcdefg\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ../../base\n")])])]),e("p",[t._v("이제 깃헙에 매니페스트용 사설 리포지토리를 생성하고 코드를 Push한다.")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("DANGER")]),t._v(" "),e("p",[t._v("소스코드에 AWS IAM 사용자의 ID가 포함되므로 반드시 사설 리포지토리로 생성한다.")])]),t._v(" "),e("p",[t._v("이제 소스코드 리포지토리에 코드를 Push했을 때 매니페스트용 리포지토리로 매니페스트 파일들을 푸시하도록 Github Actions 스크립트를 추가한다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# main.yml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 생략 ...")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Setup Kustomize\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" imranismail/setup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kustomize@v1\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout kustomize repository\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <GITHUB_USERNAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("/<GITHUB_REPOSITORY_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ref")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.MANIFEST_REPO_PERSONAL_ACCESS_TOKEN "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <GITHUB_REPOSITORY_NAME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Update Kubernetes resources\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          echo ${{ steps.login-ecr.outputs.registry }}\n          echo ${{ steps.build-image.outputs.ecr_repository }}\n          echo ${{ steps.build-image.outputs.image_tag }}\n          cd <GITHUB_REPOSITORY_NAME>/overlays/prod/\n          kustomize edit set image ${{ steps.login-ecr.outputs.registry}}/${{ steps.build-image.outputs.ecr_repository }}=${{ steps.login-ecr.outputs.registry}}/${{ steps.build-image.outputs.ecr_repository }}:${{ steps.build-image.outputs.image_tag }}\n          cat kustomization.yml")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Commit files\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          cd <GITHUB_REPOSITORY_NAME>\n          git config --global user.email "<GITHUB_EMAIL>"\n          git config --global user.name "<GITHUB_USENNAME>"\n          git commit -am "Update image tag"\n          git push -u origin main')]),t._v("\n")])])]),e("p",[t._v("Github Secret에 "),e("code",[t._v("MANIFEST_REPO_PERSONAL_ACCESS_TOKEN")]),t._v("를 추가한다. "),e("a",{attrs:{href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("PAT(Personal Access Token)"),e("OutboundLink")],1),t._v("은 이 포스트를 참고하여 생성할 수 있다.")]),t._v(" "),e("p",[t._v("이제 소스코드 리포지토리에 다시 한번 푸시해보자. 메니페스트용 리포지토리에 "),e("code",[t._v("Kubernetes")]),t._v("와 "),e("code",[t._v("Kustomize")]),t._v(" 설정파일이 생성되면 성공한 것이다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1406),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"argo-cd를-사용하여-배포하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argo-cd를-사용하여-배포하기"}},[t._v("#")]),t._v(" Argo CD를 사용하여 배포하기")]),t._v(" "),e("p",[e("code",[t._v("Argo CD")]),t._v("는 메니페스트 리포지토리가 변경되면 이를 감지하여 쿠버네티스 클러스터에 반영하는 역할을 한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1407),alt:""}})]),t._v(" "),e("p",[t._v("먼저 쿠버네티스 클러스터에서 "),e("code",[t._v("Argo CD")]),t._v("를 설치하자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 네임스페이스 생성\n$ kubectl create namespace argocd\n\n// Argo CD와 관련된 오브젝트 설치\n$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n")])])]),e("p",[e("code",[t._v("Argo CD")]),t._v("와 관련된 오브젝트가 "),e("code",[t._v("argocd")]),t._v(" 네임스페이스에 설치된다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl get all -n argocd\nNAME                                                    READY   STATUS    RESTARTS   AGE\npod/argocd-application-controller-0                     1/1     Running   0          37h\npod/argocd-applicationset-controller-79f97597cb-gntdl   1/1     Running   0          37h\npod/argocd-dex-server-6fd8b59f5b-gwwr9                  1/1     Running   0          37h\npod/argocd-notifications-controller-5549f47758-4gqxv    1/1     Running   0          37h\npod/argocd-redis-79bdbdf78f-k8ftl                       1/1     Running   0          37h\npod/argocd-repo-server-5569c7b657-2df8d                 1/1     Running   0          37h\npod/argocd-server-664b7c6878-krfp7                      1/1     Running   0          37h\n\nNAME                                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\nservice/argocd-applicationset-controller          ClusterIP   10.107.177.230   <none>        7000/TCP                     37h\nservice/argocd-dex-server                         ClusterIP   10.99.2.29       <none>        5556/TCP,5557/TCP,5558/TCP   37h\nservice/argocd-metrics                            ClusterIP   10.106.79.143    <none>        8082/TCP                     37h\nservice/argocd-notifications-controller-metrics   ClusterIP   10.107.128.107   <none>        9001/TCP                     37h\nservice/argocd-redis                              ClusterIP   10.99.61.196     <none>        6379/TCP                     37h\nservice/argocd-repo-server                        ClusterIP   10.105.139.69    <none>        8081/TCP,8084/TCP            37h\nservice/argocd-server                             ClusterIP   10.96.104.252    <none>        80:30609/TCP,443:30992/TCP   37h\nservice/argocd-server-metrics                     ClusterIP   10.110.209.117   <none>        8083/TCP                     37h\n\nNAME                                               READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/argocd-applicationset-controller   1/1     1            1           37h\ndeployment.apps/argocd-dex-server                  1/1     1            1           37h\ndeployment.apps/argocd-notifications-controller    1/1     1            1           37h\ndeployment.apps/argocd-redis                       1/1     1            1           37h\ndeployment.apps/argocd-repo-server                 1/1     1            1           37h\ndeployment.apps/argocd-server                      1/1     1            1           37h\n\nNAME                                                          DESIRED   CURRENT   READY   AGE\nreplicaset.apps/argocd-applicationset-controller-79f97597cb   1         1         1       37h\nreplicaset.apps/argocd-dex-server-6fd8b59f5b                  1         1         1       37h\nreplicaset.apps/argocd-notifications-controller-5549f47758    1         1         1       37h\nreplicaset.apps/argocd-redis-79bdbdf78f                       1         1         1       37h\nreplicaset.apps/argocd-repo-server-5569c7b657                 1         1         1       37h\nreplicaset.apps/argocd-server-664b7c6878                      1         1         1       37h\n")])])]),e("p",[t._v("Argo CD는 웹 브라우저에서 GUI 형태로 관련된 오브젝트를 관리할 수 있도록 "),e("code",[t._v("Argo CD API server")]),t._v("를 제공한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1408),alt:""}})]),t._v(" "),e("p",[t._v("Argo CD가 설치되면 기본적으로 API server 접근하기 위한 서비스가 "),e("code",[t._v("Cluster IP")]),t._v("타입으로 설정된다. 클러스터 외부에서도 API server에 접근할 수 있도록 서비스 타입을 "),e("code",[t._v("NodePort")]),t._v("로 바꿔주자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ kubectl patch svc argocd-server -n argocd -p \'{"spec": {"type": "NodePort"}}\'\n')])])]),e("div",{staticClass:"language- extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl get service -n argocd\nNAME                                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE\nargocd-applicationset-controller          ClusterIP   10.107.177.230   <none>        7000/TCP                     8m40s\nargocd-dex-server                         ClusterIP   10.99.2.29       <none>        5556/TCP,5557/TCP,5558/TCP   8m40s\nargocd-metrics                            ClusterIP   10.106.79.143    <none>        8082/TCP                     8m40s\nargocd-notifications-controller-metrics   ClusterIP   10.107.128.107   <none>        9001/TCP                     8m40s\nargocd-redis                              ClusterIP   10.99.61.196     <none>        6379/TCP                     8m40s\nargocd-repo-server                        ClusterIP   10.105.139.69    <none>        8081/TCP,8084/TCP            8m40s\nargocd-server                             NodePort    10.96.104.252    <none>        80:30609/TCP,443:30992/TCP   8m40s\nargocd-server-metrics                     ClusterIP   10.110.209.117   <none>        8083/TCP                     8m40s\n")])])]),e("p",[t._v("이제 클러스터 외부에서 "),e("code",[t._v("<워커 노드 IP>:<외부노출 포트>")]),t._v(" 형태로 API server에 접근할 수 있다.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[e("code",[t._v("EC2")]),t._v("로 클러스터를 구축한 경우 보안 그룹에서 해당 포트를 개방해야한다.")])]),t._v(" "),e("p",[t._v("제대로 접근한 경우 다음과 같이 로그인 화면이 나온다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1409),alt:""}})]),t._v(" "),e("p",[t._v("기본 계정은 "),e("code",[t._v("admin")]),t._v("이며, 비밀번호는 다음 명령어로 알아낼 수 있다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d\n')])])]),e("p",[t._v("물론 커맨드라인으로 Argo CD를 제어할 수 있다. 로컬 PC에 "),e("code",[t._v("Argo CD CLI")]),t._v("를 설치하면 된다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ brew tap argoproj/tap \n\n$ brew install argoproj/tap/argocd\n\n$ argocd version\nargocd: v2.3.3+07ac038.dirty\n  BuildDate: 2022-03-30T05:20:18Z\n  GitCommit: 07ac038a8f97a93b401e824550f0505400a8c84e\n  GitTreeState: dirty\n  GoVersion: go1.18\n  Compiler: gc\n  Platform: darwin/amd64\nFATA[0000] Argo CD server address unspecified  \n\n$ argocd login <워커 노드IP>:30609\nWARNING: server certificate had error: x509: “Argo CD” certificate is not trusted. Proceed insecurely (y/n)? y\nUsername: admin\nPassword: \n'admin:login' logged in successfully\n")])])]),e("p",[t._v("비밀번호를 변경해보자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ argocd account update-password\n*** Enter password of currently logged in user (admin): <기존 비밀번호> \n*** Enter new password for user admin: <새로운 비밀번호>\n*** Confirm new password for user admin: <새로운 비밀번호>\n")])])]),e("p",[t._v("이제 Argo CD와 메니페스트 저장소를 연동할 차례다. 리포지토리 탭에서 "),e("code",[t._v("Repositories")]),t._v("를 클릭한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1410),alt:""}})]),t._v(" "),e("p",[e("code",[t._v("CONNECTION REPO USING HTTPS")]),t._v("를 선택한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1411),alt:""}})]),t._v(" "),e("p",[t._v("퍼블릭 리포지토리인 경우 리포지토리 저장소 주소만 입력하면 저장소가 추가된다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1412),alt:""}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(1413),alt:""}})]),t._v(" "),e("p",[t._v("프라이빗 리포지토리의 경우 SSH을 통해 저장소를 추가해야한다. 먼저 로컬 PC에서 공개키, 개인키 쌍을 생성하자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ ssh-keygen -t ecdsa -b 521 -C "<YOUR_EMAIL>"\nGenerating public/private ecdsa key pair.\nEnter file in which to save the key (/Users/yologger/.ssh/id_ecdsa):<KEY_NAME>\n')])])]),e("p",[t._v("키 생성이 완료되면 개인키와 공개키가 생성된다. "),e("code",[t._v(".pub")]),t._v(" 확장자가 붙은 키가 공개키, 나머지가 개인키다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ ls\n<KEY_NAME>.pub\n<KEY_NAME>\n")])])]),e("p",[t._v("공개키를 메니페스트 리포지토리에 등록할 차례다. "),e("code",[t._v("Settings > Deploy Keys > Add deploy key")]),t._v("로 이동하여 공개키 파일의 내용을 등록한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1414),alt:""}})]),t._v(" "),e("p",[t._v("이제 "),e("code",[t._v("Argo CD CLI")]),t._v("로 프라이빗 리포지토리를 추가할 수 있다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// argocd repo add git@github.com:<YOUR_ID>/<YOUR_REPOSTIORY>.git --ssh-private-key-path <키 경로>\n$ argocd repo add git@github.com:yologger/manifest_repo.git --ssh-private-key-path ./github-ssh-key\nRepository 'git@github.com:yologger/manifest_repo.git.git' added\n")])])]),e("p",[t._v("프라이빗 리포지토리가 추가되었는지 확인하자.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ argocd repo list\nTYPE  NAME  REPO                                        INSECURE  OCI    LFS    CREDS  STATUS      MESSAGE  PROJECT\ngit         git@github.com:yologger/manifest_repo.git   false     false  false  false  Successful \n")])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Argo CD는 3분마다 Github와 통신하며 리포지토리 변경사항을 확인한다. 따라서 EC2에 클러스터를 구축한 경우 보안 그룹을 적절히 설정해주어야 한다.")])]),t._v(" "),e("p",[t._v("저장소가 추가되었다면 "),e("code",[t._v("Argo CD API 서버")]),t._v("에서 "),e("code",[t._v("Application 탭 > NEW APP")]),t._v("을 선택한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1415),alt:""}})]),t._v(" "),e("p",[e("code",[t._v("Application Name")]),t._v("을 입력하고 "),e("code",[t._v("SYNC POLICY")]),t._v("는 "),e("code",[t._v("Automatic")]),t._v("으로 설정한다. "),e("code",[t._v("Automatic")]),t._v("은 3분에 한번씩 연결된 저장소가 변경되었는지 자동으로 비교하고 반영하는 옵션이다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1416),alt:""}})]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Prune Resources")]),t._v(": 변경이 발생하여 리소스를 업데이트할 때, 기존 리소스를 삭제하고 새로운 리소스를 생성한다.")]),t._v(" "),e("li",[e("code",[t._v("Self Heal")]),t._v(": 오브젝트가 다운되었을 때 Argo CD가 스스로 복구해준다.")])]),t._v(" "),e("p",[t._v("등록한 저장소를 추가하고, 저장소 내 메니페스트 파일 경로를 입력한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1417),alt:""}})]),t._v(" "),e("p",[t._v("클러스터를 선택하고 사용할 네임스페이스를 지정하고 "),e("code",[t._v("CREATE")]),t._v(" 버튼을 누른다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1418),alt:""}})]),t._v(" "),e("p",[t._v("이제 메니페스트 리포지토리를 반영하여 쿠버네티스 배포를 시작한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1419),alt:""}})]),t._v(" "),e("p",[t._v("나타나면 쿠버네티스 배포에 성공했다면 "),e("code",[t._v("Sync OK")]),t._v(" 상태가 된다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(1420),alt:""}})]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl get all -n spring\nNAME                                         READY   STATUS    RESTARTS   AGE\npod/springboot-deployment-6d7b75c58d-f5hbj   1/1     Running   0          2m4s\npod/springboot-deployment-6d7b75c58d-kl27z   1/1     Running   0          2m1s\n\nNAME                         TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)           AGE\nservice/springboot-service   NodePort   10.100.154.16   <none>        10000:30070/TCP   10m\n\nNAME                                    READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/springboot-deployment   2/2     2            2           10m\n\nNAME                                               DESIRED   CURRENT   READY   AGE\nreplicaset.apps/springboot-deployment-6d7b75c58d   2         2         2       2m4s\nreplicaset.apps/springboot-deployment-7f75b4d546   0         0         0       10m\n")])])]),e("p",[t._v("마지막으로 소스코드를 수정하고 소스코드 리포지토리에 푸시하여 CI/CD 파이프라인이 잘 작동하는지 확인해보자.")]),t._v(" "),e("h2",{attrs:{id:"argo-rollout-적용하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argo-rollout-적용하기"}},[t._v("#")]),t._v(" Argo Rollout 적용하기")]),t._v(" "),e("p",[t._v("기본적으로 디플로이먼트는 팟을 "),e("code",[t._v("롤링 업데이트(Rolling Update)")]),t._v(" 방식으로 교체한다. "),e("b",[e("code",[t._v("Argo Rollout")])]),t._v("을 적용하면 "),e("code",[t._v("Blue/Green")]),t._v(" 방식으로 무중단 배포할 수 있다.")]),t._v(" "),e("p",[t._v("우선 "),e("code",[t._v("Argo Rollout")]),t._v("을 설치한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl create namespace argo-rollouts\n\n$ kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml\n")])])]),e("p",[t._v("그 다음 "),e("code",[t._v("kubectl")]),t._v("에 "),e("code",[t._v("Argo Rollout")]),t._v(" 플러그인을 설치한다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64\n\n$ chmod +x ./kubectl-argo-rollouts-linux-amd64\n\n$ sudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts\n\n$ kubectl argo rollouts version\nkubectl-argo-rollouts: v1.2.0+08cf10e\n  BuildDate: 2022-03-22T00:25:11Z\n  GitCommit: 08cf10e554fe99c24c8a37ad07fadd9318e4c8a1\n  GitTreeState: clean\n  GoVersion: go1.17.6\n  Compiler: gc\n  Platform: linux/amd64\n")])])]),e("p",[t._v("그리고 디플로이먼트 메니페스트를 다음과 같이 수정한다.")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("div",{staticClass:"highlight-lines"},[e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apiVersion: apps/v1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" argoproj.io/v1alpha1\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kind: Deployment")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Rollout \n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" h2h"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("label\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" springboot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("app\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <YOUR_AWS_IAM_USER_ID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".dkr.ecr.<YOUR_ECR_REGION"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(".amazonaws.com/<YOUR_ECR_REPOSITORY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" regcred\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("blueGreen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activeService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rollout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bluegreen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("active\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("previewService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rollout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bluegreen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("preview\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("autoPromotionEnabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("      \n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);